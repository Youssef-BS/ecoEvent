pipeline {
    agent any
    stages {
        stage('GIT') {
            steps {
                git(
                    branch: 'Devops', 
                    url: 'https://github.com/Youssef-BS/ecoEvent.git',
                    credentialsId: 'github-creds'
                )
            }
        }
        
        stage('Install Node.js 20') {
            steps {
                sh '''
                    sudo apt remove -y nodejs npm 2>/dev/null || true
                    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
                    sudo apt install -y nodejs
                '''
            }
        }
        
        stage('Install PHP and Composer') {
            steps {
                sh '''
                    sudo apt update
                    sudo apt install -y php php-cli php-mysql php-zip php-gd php-mbstring php-curl php-xml php-bcmath
                    curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
                '''
            }
        }
        
        stage('Install Dependencies') {
            steps {
                sh '''
                    composer install --no-dev --optimize-autoloader
                    npm install
                    npm run build
                '''
            }
        }
        
        stage('Fix Host Permissions') {
            steps {
                sh '''
                    echo "=== Setting correct permissions on host ==="
                    sudo chown -R $USER:$USER .
                    sudo find . -type f -exec chmod 644 {} \\;
                    sudo find . -type d -exec chmod 755 {} \\;
                    sudo chmod -R 775 storage bootstrap/cache
                    sudo chmod -R 777 storage/framework storage/logs
                '''
            }
        }
        
        stage('Build Docker Images') {
            steps {
                sh 'sudo docker compose build --no-cache'
            }
        }
        
        stage('Deploy with Docker Compose') {
            steps {
                sh 'sudo docker compose down && sudo docker compose up -d'
            }
        }
        
        stage('Wait for Services') {
            steps {
                sh '''
                    echo "Waiting for services to start..."
                    sleep 30
                '''
            }
        }
        
        stage('Fix Container Permissions') {
            steps {
                sh '''
                    echo "=== Fixing permissions inside container ==="
                    sudo docker exec ecoevent-app sh -c "
                        chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache &&
                        chmod -R 775 /var/www/storage /var/www/bootstrap/cache &&
                        chmod -R 777 /var/www/storage/framework /var/www/storage/logs
                    "
                '''
            }
        }
        
        stage('Database Setup') {
            steps {
                sh '''
                    echo "=== Setting up database ==="
                    sudo docker exec ecoevent-app php artisan config:clear
                    sudo docker exec ecoevent-app php artisan cache:clear
                    sudo docker exec ecoevent-app php artisan key:generate --force
                    sudo docker exec ecoevent-app php artisan migrate --force
                '''
            }
        }
        
        stage('Laravel Optimization') {
            steps {
                sh '''
                    echo "=== Optimizing Laravel ==="
                    sudo docker exec ecoevent-app php artisan config:cache
                    sudo docker exec ecoevent-app php artisan route:cache
                    sudo docker exec ecoevent-app php artisan view:cache
                '''
            }
        }
        
        stage('Debug Application') {
            steps {
                sh '''
                    echo "=== Final Permission Check ==="
                    sudo docker exec ecoevent-app ls -la storage/ bootstrap/cache/
                    
                    echo "=== Application Logs ==="
                    sudo docker exec ecoevent-app ls -la storage/logs/
                    sudo docker exec ecoevent-app cat storage/logs/laravel.log 2>/dev/null || echo "No log file yet"
                    
                    echo "=== Testing Application ==="
                    sudo docker exec ecoevent-app php artisan route:list || true
                '''
            }
        }
        
        stage('Verify Deployment') {
            steps {
                script {
                    retry(5) {
                        sleep 10
                        sh 'curl -f http://192.168.163.128:8089/ || exit 1'
                    }
                }
            }
        }
    }
    
}